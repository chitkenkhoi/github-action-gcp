# .github/workflows/google-cloud-run.yml

name: Build and Deploy App to Cloud Run via Terraform

on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**' # Example: only trigger on source code changes, not terraform changes
      - 'Dockerfile'
      - 'index.html'
  workflow_dispatch:

env:
  PROJECT_ID: 'arboreal-retina-466009-h1'
  GAR_LOCATION: 'us-central1'
  SERVICE_NAME: 'hello-cloud-run-quangkhoi'
  IMAGE_NAME: 'hello-image-quangkhoi'
  GAR_REPOSITORY: 'accenture-lab'
  SERVICE_ACCOUNT_NAME: 'github-actions-sa'
  TF_WORKING_DIR: 'terraform' # Set the working directory for Terraform

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: 'Checkout Repository'
      uses: 'actions/checkout@v4'

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: '${{ env.PROJECT_ID }}'
        workload_identity_provider: 'projects/768212343059/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        # service_account: '${{ env.SERVICE_ACCOUNT_NAME }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

    # This action also configures the Docker credential helper for GAR
    - name: 'Set up GCloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Configure Docker'
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

    - name: 'Build and Push Docker Image'
      uses: 'docker/build-push-action@v5'
      id: 'build-push'
      with:
        push: true
        tags: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

    - name: 'Set up Terraform'
      uses: hashicorp/setup-terraform@v2

    - name: 'Terraform Init'
      run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

    - name: 'Deploy to Cloud Run by applying Terraform'
      run: |
        # The full image name with the unique SHA tag from the build step
        IMAGE_WITH_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

        # Run terraform apply, only changing the image variable
        # Terraform is smart enough to see that only the Cloud Run service's image needs updating
        terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve -input=false \
          -var="project_id=${{ env.PROJECT_ID }}" \
          -var="region=${{ env.GAR_LOCATION }}" \
          -var="service_name=${{ env.SERVICE_NAME }}" \
          -var="gar_repository_name=${{ env.GAR_REPOSITORY }}" \
          -var="image_name_with_tag=${IMAGE_WITH_TAG}"