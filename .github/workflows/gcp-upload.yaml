# .github/workflows/google-cloud-run.yml

name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - 'main' # Trigger the workflow on pushes to the main branch
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

env:
  PROJECT_ID: 'accenture-intern' # TODO: Your Google Cloud project ID
  GAR_LOCATION: 'us-central1' # TODO: The region of your Artifact Registry
  SERVICE_NAME: 'hello-cloud-run-quangkhoi' # TODO: The name of your Cloud Run service
  IMAGE_NAME: 'hello-image-quangkhoi' # TODO: The name for your container image

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # Grant permissions to the GITHUB_TOKEN for the OIDC token
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout repository
      uses: 'actions/checkout@v4'
    
    - name: 'Debug: Print GitHub Context'
      run: |
        echo "Repository: ${{ github.repository }}"
        echo "Ref: ${{ github.ref }}"

    # Authenticate to Google Cloud using Workload Identity Federation
    # This action will automatically configure the Docker credential helper
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/727026638213/locations/global/workloadIdentityPools/accenture-lab-identitypool/providers/accenture-lab-identityprovider'
        # Omit 'service_account' for direct WIF access.
        # The action will authenticate using the GitHub Actions OIDC token.
    - name: 'Debug: Check Authentication and Context'
      run: |
        echo "--- GitHub Context ---"
        echo "Repository: ${{ github.repository }}"
        echo "Ref: ${{ github.ref }}"
        echo "Actor: ${{ github.actor }}"
        echo "----------------------"
        echo ""
        echo "--- gcloud Auth Info ---"
        gcloud auth list
        echo "------------------------"
        echo ""
        echo "--- Docker Config ---"
        echo "Verifying Docker credential helper for GAR..."
        cat ~/.docker/config.json
        echo "---------------------"

    # Build the Docker image and push it to Google Artifact Registry
    - name: Build and Push Docker Image
      id: 'build-push'
      uses: 'docker/build-push-action@v5'
      with:
        push: true
        # The GAR repository to push the image to
        tags: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'

    # Deploy the newly pushed image to Cloud Run
    - name: Deploy to Cloud Run
      id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: '${{ env.SERVICE_NAME }}'
        region: '${{ env.GAR_LOCATION }}'
        # Use the full image digest from the build-push step to ensure the exact image is deployed
        image: '${{ steps.build-push.outputs.digest }}'

    # Optional: Test the new deployment by curling the service URL
    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'